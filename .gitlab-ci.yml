services:
   - docker:dind

stages:
   - sync
   - release
   - review

sync-to-github:
  image: ceregousa/ubuntu-git
  stage: sync
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$GITHUB_SSH_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git branch -avv
    - git checkout $CI_COMMIT_REF_NAME
    - git branch --set-upstream-to=origin/$CI_COMMIT_REF_NAME fix_github_sync
    - git pull --all
    - git remote rm origin
    - git remote add origin git@github.com:tripledio/tripledio.github.io.git
    - git push -f origin '*:*'
    - git push -f origin --all -u
    - git branch -avv

release-image:
  image: docker:latest
  stage: release
  script:
    - export IMAGE_TAG=$(echo -en $CI_COMMIT_REF_NAME | tr -c '[:alnum:]_.-' '-')
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"

start-review:
  image: doomkin/ubuntu-ssh
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.tripledio.rotate-it.be
    on_stop: stop_review
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - export IMAGE_TAG=$(echo -en $CI_COMMIT_REF_NAME | tr -c '[:alnum:]_.-' '-')
    - ssh $USER@$HOST docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - ssh $USER@$HOST docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - ssh $USER@$HOST docker stop $CI_ENVIRONMENT_SLUG || true
    - ssh $USER@$HOST docker rm $CI_ENVIRONMENT_SLUG || true
    - ssh $USER@$HOST docker run -d --name=$CI_ENVIRONMENT_SLUG -e VIRTUAL_PORT=4000 -e VIRTUAL_HOST=$CI_ENVIRONMENT_SLUG.tripledio.rotate-it.be $CI_REGISTRY_IMAGE:$IMAGE_TAG

stop_review:
  image: doomkin/ubuntu-ssh
  stage: review
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - export IMAGE_TAG=$(echo -en $CI_COMMIT_REF_NAME | tr -c '[:alnum:]_.-' '-')
    - ssh $USER@$HOST docker stop $CI_ENVIRONMENT_SLUG || true
    - ssh $USER@$HOST docker rm $CI_ENVIRONMENT_SLUG || true
